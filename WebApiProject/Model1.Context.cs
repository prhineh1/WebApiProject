//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarFinderEntities : DbContext
    {
        public CarFinderEntities()
            : base("name=CarFinderEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Car> Cars { get; set; }
    
        public virtual ObjectResult<string> GetCarMakes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCarMakes");
        }
    
        public virtual ObjectResult<GetCarsByYearAndMakeAndModel_Result> GetCarsByYearAndMakeAndModel(string year, string make, string model)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsByYearAndMakeAndModel_Result>("GetCarsByYearAndMakeAndModel", yearParameter, makeParameter, modelParameter);
        }
    
        public virtual ObjectResult<GetCarsForEngineSizeCylinders_Result> GetCarsForEngineSizeCylinders(string engineSize)
        {
            var engineSizeParameter = engineSize != null ?
                new ObjectParameter("engineSize", engineSize) :
                new ObjectParameter("engineSize", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsForEngineSizeCylinders_Result>("GetCarsForEngineSizeCylinders", engineSizeParameter);
        }
    
        public virtual ObjectResult<GetCarsForHorsepowerLessthan300_Result> GetCarsForHorsepowerLessthan300()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsForHorsepowerLessthan300_Result>("GetCarsForHorsepowerLessthan300");
        }
    
        public virtual ObjectResult<GetCarsForWeightLessthan2000kg_Result> GetCarsForWeightLessthan2000kg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsForWeightLessthan2000kg_Result>("GetCarsForWeightLessthan2000kg");
        }
    
        public virtual ObjectResult<GetCarsForWeigthLessThan2000kgAndHorsepowerGreaterThan300_Result> GetCarsForWeigthLessThan2000kgAndHorsepowerGreaterThan300()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsForWeigthLessThan2000kgAndHorsepowerGreaterThan300_Result>("GetCarsForWeigthLessThan2000kgAndHorsepowerGreaterThan300");
        }
    
        public virtual ObjectResult<GetCarsForYearModelMake_Result> GetCarsForYearModelMake(string year, string model, string make)
        {
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarsForYearModelMake_Result>("GetCarsForYearModelMake", yearParameter, modelParameter, makeParameter);
        }
    
        public virtual ObjectResult<string> GetMakesForYear(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMakesForYear", yearParameter);
        }
    
        public virtual ObjectResult<GetMidEnginedCars_Result> GetMidEnginedCars()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMidEnginedCars_Result>("GetMidEnginedCars");
        }
    
        public virtual ObjectResult<string> GetModelsForYearAndMake(Nullable<int> year, string make)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModelsForYearAndMake", yearParameter, makeParameter);
        }
    
        public virtual ObjectResult<string> GetModelYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModelYears");
        }
    
        public virtual ObjectResult<GetSUVs_Result> GetSUVs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSUVs_Result>("GetSUVs");
        }
    
        public virtual ObjectResult<string> GetTrimLevels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTrimLevels");
        }
    
        public virtual ObjectResult<string> ModelTrimForYearAndMakeAndModel(Nullable<int> year, string make, string model)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var makeParameter = make != null ?
                new ObjectParameter("make", make) :
                new ObjectParameter("make", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ModelTrimForYearAndMakeAndModel", yearParameter, makeParameter, modelParameter);
        }
    }
}
